{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{cat * or merge keys + and def}, :name cljs.spec, :imports nil, :requires {cljs.core cljs.core, gobj goog.object, goog.object goog.object, walk clojure.walk, gen cljs.spec.impl.gen, cljs.spec.impl.gen cljs.spec.impl.gen, c cljs.core, str clojure.string, clojure.string clojure.string, clojure.walk clojure.walk}, :uses nil, :defs {form {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 128, :column 7, :end-line 128, :end-column 11, :arglists (quote ([spec])), :doc "returns the spec as data"}, :name cljs.spec/form, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 11, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc "returns the spec as data"}, *recursion-limit* {:name cljs.spec/*recursion-limit*, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 21, :column 1, :end-line 21, :end-column 33, :dynamic true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 21, :column 16, :end-line 21, :end-column 33, :dynamic true}, :doc "A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen."}, *coll-error-limit* {:name cljs.spec/*coll-error-limit*, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 35, :column 1, :end-line 35, :end-column 34, :dynamic true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 35, :column 16, :end-line 35, :end-column 34, :dynamic true}, :doc "The number of errors reported by explain in a collection spec'ed with 'every'"}, op-explain {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 962, :column 8, :end-line 962, :end-column 18, :private true, :arglists (quote ([form p path via in input]))}, :private true, :name cljs.spec/op-explain, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 18, :method-params ([form p path via in input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 962, :end-line 962, :max-fixed-arity 6, :fn-var true, :arglists (quote ([form p path via in input]))}, alt-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 846, :column 19, :end-line 846, :end-column 27, :skip-wiki true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, :name cljs.spec/alt-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 27, :method-params ([ks ps forms]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 846, :end-line 846, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ks ps forms])), :doc "Do not call this directly, use 'alt'"}, tagged-ret {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 533, :column 8, :end-line 533, :end-column 18, :private true, :arglists (quote ([v]))}, :private true, :name cljs.spec/tagged-ret, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, ->t_cljs$spec47033 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([and-spec-impl forms preds gfn meta47034])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec47033, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([and-spec-impl forms preds gfn meta47034]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 604, :max-fixed-arity 5, :fn-var true, :arglists (quote ([and-spec-impl forms preds gfn meta47034])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec47316 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([regex-spec-impl re gfn meta47317])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec47316, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([regex-spec-impl re gfn meta47317]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 1097, :max-fixed-arity 4, :fn-var true, :arglists (quote ([regex-spec-impl re gfn meta47317])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, def-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 248, :column 19, :end-line 248, :end-column 27, :skip-wiki true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, :name cljs.spec/def-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 27, :method-params ([k form spec]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 3, :fn-var true, :arglists (quote ([k form spec])), :doc "Do not call this directly, use 'def'"}, t_cljs$spec47036 {:num-fields 5, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec47036, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 604, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, *runtime-asserts* {:name cljs.spec/*runtime-asserts*, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 1223, :column 1, :end-line 1225, :end-column 20, :private true, :dynamic true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1225, :column 3, :end-line 1225, :end-column 20, :private true, :dynamic true}}, regex-spec-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1094, :column 19, :end-line 1094, :end-column 34, :skip-wiki true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, :name cljs.spec/regex-spec-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 34, :method-params ([re gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 1094, :end-line 1094, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re gfn])), :doc "Do not call this directly, use 'spec' with a regex op argument"}, merge-spec-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 633, :column 19, :end-line 633, :end-column 34, :skip-wiki true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'merge'"}, :name cljs.spec/merge-spec-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 34, :method-params ([forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 633, :end-line 633, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'merge'"}, explain-data* {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 166, :column 7, :end-line 166, :end-column 20, :arglists (quote ([spec path via in x]))}, :name cljs.spec/explain-data*, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 20, :method-params ([spec path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 5, :fn-var true, :arglists (quote ([spec path via in x]))}, add-ret {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 913, :column 8, :end-line 913, :end-column 15, :private true, :arglists (quote ([p r k]))}, :private true, :name cljs.spec/add-ret, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 15, :method-params ([p r k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 913, :end-line 913, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p r k]))}, explain-pred-list {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 590, :column 8, :end-line 590, :end-column 25, :private true, :arglists (quote ([forms preds path via in x]))}, :private true, :name cljs.spec/explain-pred-list, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 25, :method-params ([forms preds path via in x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 590, :end-line 590, :max-fixed-arity 6, :fn-var true, :arglists (quote ([forms preds path via in x]))}, MAX_INT {:name cljs.spec/MAX_INT, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 19, :column 1, :end-line 19, :end-column 21, :const true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 19, :column 14, :end-line 19, :end-column 21, :const true}}, check-asserts {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1233, :column 7, :end-line 1233, :end-column 20, :arglists (quote ([flag])), :doc "Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec/*runtime-asserts*.\nDefaults to false."}, :name cljs.spec/check-asserts, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 20, :method-params ([flag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1233, :end-line 1233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([flag])), :doc "Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec/*runtime-asserts*.\nDefaults to false."}, alt2 {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 844, :column 8, :end-line 844, :end-column 12, :private true, :arglists (quote ([p1 p2]))}, :private true, :name cljs.spec/alt2, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 12, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 844, :end-line 844, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, assert* {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1241, :column 7, :end-line 1241, :end-column 14, :arglists (quote ([spec x])), :doc "Do not call this directly, use 'assert'."}, :name cljs.spec/assert*, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 14, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1241, :end-line 1241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Do not call this directly, use 'assert'."}, inst-in-range? {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1189, :column 7, :end-line 1189, :end-column 21, :arglists (quote ([start end inst])), :doc "Return true if inst at or after start and before end"}, :name cljs.spec/inst-in-range?, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 21, :method-params ([start end inst]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1189, :end-line 1189, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start end inst])), :doc "Return true if inst at or after start and before end"}, registry-ref {:name cljs.spec/registry-ref, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 47, :column 1, :end-line 47, :end-column 32, :private true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 47, :column 20, :end-line 47, :end-column 32, :private true}}, accept? {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 781, :column 8, :end-line 781, :end-column 15, :private true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, :private true, :name cljs.spec/accept?, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 15, :method-params ([p__47090]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 781, :end-line 781, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [:cljs.spec/op]}]))}, and-spec-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 601, :column 19, :end-line 601, :end-column 32, :skip-wiki true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, :name cljs.spec/and-spec-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 32, :method-params ([forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 3, :fn-var true, :arglists (quote ([forms preds gfn])), :doc "Do not call this directly, use 'and'"}, accept {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 779, :column 8, :end-line 779, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name cljs.spec/accept, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 779, :end-line 779, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, recur-limit? {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 291, :column 8, :end-line 291, :end-column 20, :private true, :arglists (quote ([rmap id path k]))}, :private true, :name cljs.spec/recur-limit?, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 20, :method-params ([rmap id path k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 4, :fn-var true, :arglists (quote ([rmap id path k]))}, describe* {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 45, :column 4, :end-line 45, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec]))}, :protocol cljs.spec/Spec, :name cljs.spec/describe*, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 13, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec])), :doc nil}, map-spec-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 325, :column 19, :end-line 325, :end-column 32, :skip-wiki true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, :name cljs.spec/map-spec-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 32, :method-params ([p__46810]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms opt gfn], :as argm}])), :doc "Do not call this directly, use 'spec' with a map argument"}, ->t_cljs$spec46930 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([or-spec-impl keys forms preds gfn id kps cform meta46931])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec46930, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([or-spec-impl keys forms preds gfn id kps cform meta46931]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 553, :max-fixed-arity 9, :fn-var true, :arglists (quote ([or-spec-impl keys forms preds gfn id kps cform meta46931])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec46884 {:num-fields 6, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec46884, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 414, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, reg-resolve! {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 73, :column 8, :end-line 73, :end-column 20, :private true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"}, :private true, :name cljs.spec/reg-resolve!, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 20, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k])), :doc "returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident"}, re-explain {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 1068, :column 8, :end-line 1068, :end-column 18, :private true, :arglists (quote ([path via in re input]))}, :private true, :name cljs.spec/re-explain, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 18, :method-params ([path via in re input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1068, :end-line 1068, :max-fixed-arity 5, :fn-var true, :arglists (quote ([path via in re input]))}, alts {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 843, :column 8, :end-line 843, :end-column 12, :private true, :arglists (quote ([& ps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}}, :private true, :name cljs.spec/alts, :variadic true, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(ps)], :arglists ([& ps]), :arglists-meta (nil)}, :method-params [(ps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 843, :end-line 843, :max-fixed-arity 0, :fn-var true, :arglists ([& ps])}, with-name {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 51, :column 8, :end-line 51, :end-column 17, :private true, :arglists (quote ([spec name]))}, :private true, :name cljs.spec/with-name, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 17, :method-params ([spec name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec name]))}, explain {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 212, :column 7, :end-line 212, :end-column 14, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, :name cljs.spec/explain, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 14, :method-params ([spec x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec x])), :doc "Given a spec and a value that fails to conform, prints an explanation to *out*."}, spec-name {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 54, :column 8, :end-line 54, :end-column 17, :private true, :arglists (quote ([spec]))}, :private true, :name cljs.spec/spec-name, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 17, :method-params ([spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([spec]))}, map-spec {:name cljs.spec/map-spec, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 275, :column 1, :end-line 275, :end-column 18, :declared true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 275, :column 10, :end-line 275, :end-column 18, :declared true}}, with-gen* {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 44, :column 4, :end-line 44, :end-column 13, :protocol cljs.spec/Spec, :doc nil, :arglists (quote ([spec gfn]))}, :protocol cljs.spec/Spec, :name cljs.spec/with-gen*, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 13, :method-params ([spec gfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec gfn])), :doc nil}, ->t_cljs$spec46843 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__46810 opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs map__46841 keys->specs req id req-keys opt-specs k->s pred-forms meta46844])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec46843, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([p__46810 opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs map__46841 keys->specs req id req-keys opt-specs k->s pred-forms meta46844]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 333, :max-fixed-arity 20, :fn-var true, :arglists (quote ([p__46810 opt map-spec-impl req-un opt-un gfn pred-exprs keys-pred argm opt-keys req-specs map__46841 keys->specs req id req-keys opt-specs k->s pred-forms meta46844])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs$spec47329 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta cljs.core/ILookup}, :factory :positional, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta47330])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta cljs.core/ILookup}, :name cljs.spec/->t_cljs$spec47329, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta47330]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 1142, :max-fixed-arity 10, :fn-var true, :arglists (quote ([fspec-impl argspec aform retspec rform fnspec fform gfn specs meta47330])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta cljs.core/ILookup}}, ->t_cljs$spec46884 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([form pred gfn cpred? unc meta46885])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec46884, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([form pred gfn cpred? unc meta46885]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 414, :max-fixed-arity 6, :fn-var true, :arglists (quote ([form pred gfn cpred? unc meta46885])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec47047 {:num-fields 5, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec47047, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 3, :line 636, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs$spec46899 {:num-fields 9, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec46899, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 444, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, or-spec-impl {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 539, :column 19, :end-line 539, :end-column 31, :skip-wiki true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, :name cljs.spec/or-spec-impl, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 31, :method-params ([keys forms preds gfn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 4, :fn-var true, :arglists (quote ([keys forms preds gfn])), :doc "Do not call this directly, use 'or'"}, t_cljs$spec47066 {:num-fields 25, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec47066, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 6, :line 698, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, specize {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 112, :column 8, :end-line 112, :end-column 15, :private true, :arglists (quote ([s]))}, :private true, :name cljs.spec/specize, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, t_cljs$spec46930 {:num-fields 9, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/t_cljs$spec46930, :file ".cljs_rhino_repl/cljs/spec.cljs", :type true, :anonymous true, :column 5, :line 553, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, *fspec-iterations* {:name cljs.spec/*fspec-iterations*, :file ".cljs_rhino_repl/cljs/spec.cljs", :line 27, :column 1, :end-line 27, :end-column 34, :dynamic true, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 27, :column 16, :end-line 27, :end-column 34, :dynamic true}, :doc "The number of times an anonymous fn specified by fspec will be (generatively) tested during conform"}, ->t_cljs$spec46899 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([form mmvar retag gfn id predx dval tag meta46900])), :file nil}, :protocols #{cljs.core/IMeta cljs.spec/Spec cljs.core/IWithMeta}, :name cljs.spec/->t_cljs$spec46899, :variadic false, :file ".cljs_rhino_repl/cljs/spec.cljs", :method-params ([form mmvar retag gfn id predx dval tag meta46900]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 444, :max-fixed-arity 9, :fn-var true, :arglists (quote ([form mmvar retag gfn id predx dval tag meta46900])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, Spec {:meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/.cljs_rhino_repl/cljs/spec.cljs", :line 39, :column 14, :end-line 39, :end-column 18, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {conform* [[spec x]], unform* [[spec y]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}}, :protocol-symbol true, :name cljs.spec/Spec, :file ".cljs_rhino_repl/cljs/spec.cljs", :end-column 18, :column 1, :line 39, :protocol-info {:methods {conform* [[spec x]], unform* [[spec y]], explain* [[spec path via in x]], gen* [[spec overrides path rmap]], with-gen* [[spec gfn]], describe* [[spec]]}}, :info nil, :end-line 39, :impls #{cljs.spec/t_cljs$spec47033 cljs.spec/t_cljs$spec46937 cljs.spec/t_cljs$spec47316 cljs.spec/t_cljs$spec47335 cljs.spec/t_cljs$spec46930 cljs.spec/t_cljs$spec47319 cljs.spec/t_cljs$spec46884 cljs.spec/t_cljs$spec46917 cljs.spec/t_cljs$spec47329 cljs.spec/t_cljs$spec47047 cljs.spec/t_cljs$spec46843 cljs.spec/t_cljs$spec47066 cljs.spec/t_cljs$spec46899 cljs.spec/t_cljs$spec47036 cljs.spec/t_cljs$spec46813 cljs.spec/t_cljs$spec47050}, :doc nil, :jsdoc ("@interface")}, ...}, :require-macros {c cljs.core, cljs.core cljs.core, s cljs.spec, cljs.spec cljs.spec, gen cljs.spec.impl.gen, cljs.spec.impl.gen cljs.spec.impl.gen}, :cljs.analyzer/constants {:seen #{form p__46810 tag max-count :args :max-tries :path :req-un :opt-un cljs.spec/keys p1__47346# unc :cljs.spec/invalid cljs.spec/merge :p2 :ret :gfn meta46918 :pred-exprs :into vector? :gen-max map :shrunk :fn regex-spec-impl merge-spec-impl cljs.core/vector? predx :rep+ :cljs.spec/amp cljs.core/= :opt-keys aform :pred dval :splice and-spec-impl check? forms opt argspec map__46811 :else :cljs.spec/k map-spec-impl :ks cljs.core/count p__47060 req-un ...}, :order [:cljs.spec/name :cljs.spec/op :cljs.spec/unknown fn % :else :cljs.spec/gfn :cljs.spec/problems :path :pred :val :reason :via :in :cljs.spec/recursion-limit :args :cljs.spec/invalid :cljs.spec/args :opt :req-un :opt-un :gfn :pred-exprs :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms map? cljs.spec/keys p__46810 opt map__46811 map-spec-impl :skip-wiki :arglists :doc quote :keys :as req-un opt-un pred-exprs opt-keys req-specs req req-keys opt-specs pred-forms ...]}, :doc nil}