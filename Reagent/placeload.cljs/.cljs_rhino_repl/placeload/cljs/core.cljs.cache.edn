{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name placeload.cljs.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, str clojure.string, clojure.string clojure.string}, :uses {atom reagent.core}, :defs {app {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 9, :column 7, :end-line 9, :end-column 10, :arglists (quote ([]))}, :name placeload.cljs.core/app, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app-state {:name placeload.cljs.core/app-state, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 7, :column 1, :end-line 7, :end-column 19, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 7, :column 10, :end-line 7, :end-column 19}}, draw {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([container]))}, :name placeload.cljs.core/draw, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 11, :method-params ([container]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([container]))}, on-js-reload {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([]))}, :name placeload.cljs.core/on-js-reload, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-unit {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([unit]))}, :name placeload.cljs.core/remove-unit, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 18, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, side-right-element {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 22, :column 7, :end-line 22, :end-column 25, :arglists (quote ([width height]))}, :name placeload.cljs.core/side-right-element, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 25, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, place-background {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 19, :column 7, :end-line 19, :end-column 23, :arglists (quote ([]))}, :name placeload.cljs.core/place-background, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Placeload {:protocol-inline nil, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([container]))}, :name placeload.cljs.core/Placeload, :variadic false, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :end-column 16, :method-params ([container]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([container]))}, placeload {:name placeload.cljs.core/placeload, :file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 48, :column 1, :end-line 48, :end-column 15, :meta {:file "/home/victormartins/Documents/my-repositories-gh/aprenda-clojurescript/Reagent/placeload.cljs/src/placeload/cljs/core.cljs", :line 48, :column 6, :end-line 48, :end-column 15}}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{remove-unit side-right-element :fullheight height :top placeload.cljs.core/side-right-element :ns :name :file :end-column :width :source placeload.cljs.core placeload.cljs.core/remove-unit unit :column :style :div width :line :class :container string :end-line :right placeload.cljs.core/app :arglists :doc container app :p :test :height :text}, :order [placeload.cljs.core/app :ns :name :file :end-column :source :column :line :end-line :arglists :doc :test placeload.cljs.core app container :text :p placeload.cljs.core/remove-unit remove-unit string unit :div :class :style :width :height :top :right :fullheight placeload.cljs.core/side-right-element side-right-element width height :container]}, :doc nil}